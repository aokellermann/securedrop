#!/usr/bin/env python3
import getopt
import os
import sys

from securedrop import client

if __name__ == "__main__":
    home_dir = os.getenv("HOME")
    if home_dir is None:
        raise RuntimeError("HOME not found")

    securedrop_dir = os.path.join(home_dir, ".securedrop")
    if not os.path.exists(securedrop_dir):
        os.mkdir(securedrop_dir)
        if not os.path.exists(securedrop_dir):
            raise RuntimeError("Failed to create securedrop directory: $HOME/.securedrop")
    securedrop_file = os.path.join(securedrop_dir, "client_db.json")
    securedrop_port = None
    securedrop_hostname = None
    verbose_flag = False
    try:
        opts, args = getopt.getopt(sys.argv[1:], "pafv", ["port", "address", "filename", "verbose"])
    except getopt.GetoptError as err:
        print(err)  # will print something like "option -a not recognized"
        sys.exit(2)
    for o, a in opts:
        if o in ("-p", "--port"):
            securedrop_port = a
        elif o in ("-f", "--filename"):
            securedrop_file = os.path.join(securedrop_dir, a)
        elif o in ("-a", "--address"):
            securedrop_hostname = a
        elif o in ("-v", "--verbose"):
            verbose_flag = True
        else:
            raise RuntimeError("Unhandled argument found.")
    client.main(filename=securedrop_file, port=securedrop_port, hostname=securedrop_hostname)
